{"version":3,"file":"accessible_name.js","sourceRoot":"","sources":["../src/accessible_name.ts"],"names":[],"mappings":";;;AAAA;;;;GAIG;AACH,6EAA0F;AAG1F;;;GAGG;AACH,SAAgB,iBAAiB,CAC7B,IAAa,EAAE,UAAmC,EAAE;IACtD,OAAO,iDAAsB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC;AACpD,CAAC;AAHD,8CAGC;AAED;;;;GAIG;AACH,SAAgB,yBAAyB,CACrC,IAAa,EAAE,UAAmC,EAAE;IACtD,OAAO,iDAAsB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC/C,CAAC;AAHD,8DAGC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {ComputationDetails, computeTextAlternative} from './lib/compute_text_alternative';\nimport {AccnameOptions} from './lib/options';\n\n/**\n * Compute the accessible name for a given `Element`.\n * @param elem - The `Element` whose accessible name will be calculated.\n */\nexport function getAccessibleName(\n    elem: Element, options: Partial<AccnameOptions> = {}): string {\n  return computeTextAlternative(elem, options).name;\n}\n\n/**\n * Get details surrounding the computation of the accessible name for a given\n * `Element`\n * @param elem - The `Element` whose accessible name will be calculated.\n */\nexport function getNameComputationDetails(\n    elem: Element, options: Partial<AccnameOptions> = {}): ComputationDetails {\n  return computeTextAlternative(elem, options);\n}\n"]}