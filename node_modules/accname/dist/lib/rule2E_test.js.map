{"version":3,"file":"rule2E_test.js","sourceRoot":"","sources":["../../src/lib/rule2E_test.ts"],"names":[],"mappings":"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","sourcesContent":["import {html, render} from 'lit';\n\nimport {createRuleRunner} from '../testing/utils';\n\nimport {getDefaultContext} from './context';\nimport {rule2E as rule2EImpl} from './rule2E';\n\nconst rule2E = createRuleRunner(rule2EImpl);\n\ndescribe('The function for rule 2E', () => {\n  let container: HTMLElement;\n  beforeEach(() => {\n    container = document.createElement('div');\n    document.body.appendChild(container);\n  });\n\n  afterEach(() => {\n    document.body.removeChild(container);\n  });\n\n  it('returns null if the node is not part of a name', () => {\n    render(html`<div id=\"foo\">Hello</div>`, container);\n    const elem = document.getElementById('foo');\n    expect(rule2E(elem!)).toBe(null);\n  });\n\n  it('returns null if the node is not a HTMLElement', () => {\n    const node = document.createTextNode('Hello');\n    const context = getDefaultContext();\n    context.inherited.partOfName = true;\n    expect(rule2E(node, context)).toBe(null);\n  });\n\n  it('returns text content of textArea', () => {\n    render(html`<textarea id=\"foo\">Hello world</textarea>`, container);\n    const elem = document.getElementById('foo');\n    const context = getDefaultContext();\n    context.inherited.partOfName = true;\n    expect(rule2E(elem!, context)).toBe('Hello world');\n  });\n\n  it('returns text content for inputs whose types imply textbox role', () => {\n    render(html`<input id=\"foo\" type=\"email\" value=\"hello\" />`, container);\n    const elem = document.getElementById('foo');\n    const context = getDefaultContext();\n    context.inherited.partOfName = true;\n    expect(rule2E(elem!, context)).toBe('hello');\n  });\n\n  it('returns text content for type=email inputs with list attributes (combobox role)',\n     () => {\n       render(\n           html`<input id=\"foo\" type=\"email\" list=\"emails\" value=\"hello\" />`,\n           container);\n       const elem = document.getElementById('foo');\n       const context = getDefaultContext();\n       context.inherited.partOfName = true;\n       expect(rule2E(elem!, context)).toBe('hello');\n     });\n\n  it('returns text content for inputs explicitly defined as comboboxes', () => {\n    render(\n        html`<input id=\"foo\" type=\"text\" role=\"combobox\" value=\"hello\" />`,\n        container);\n    const elem = document.getElementById('foo');\n    const context = getDefaultContext();\n    context.inherited.partOfName = true;\n    expect(rule2E(elem!, context)).toBe('hello');\n  });\n\n  it('returns text alternative of selected option in select element', () => {\n    render(\n        html`\n        <select id=\"foo\">\n          <option>Hello</option>\n          <option selected>world</option>\n        </select>\n      `,\n        container);\n    const elem = document.getElementById('foo');\n    const context = getDefaultContext();\n    context.inherited.partOfName = true;\n    expect(rule2E(elem!, context)).toBe('world');\n  });\n\n  it('returns text alternative for multiple selected options in select element',\n     () => {\n       render(\n           html`\n        <select id=\"foo\" multiple>\n          <option selected>Hello</option>\n          <option selected>world</option>\n        </select>\n      `,\n           container);\n       const elem = document.getElementById('foo');\n       const context = getDefaultContext();\n       context.inherited.partOfName = true;\n       expect(rule2E(elem!, context)).toBe('Hello world');\n     });\n\n  it('returns text alternative for selected options in explicitly defined listbox',\n     () => {\n       render(\n           html`\n        <div id=\"foo\" role=\"listbox\">\n          <div role=\"option\" aria-selected=\"true\">Green</div>\n          <div role=\"option\">Orange</div>\n          <div role=\"option\">Red</div>\n          <div role=\"option\">Blue</div>\n        </div>\n      `,\n           container);\n       const elem = document.getElementById('foo');\n       const context = getDefaultContext();\n       context.inherited.partOfName = true;\n       expect(rule2E(elem!, context)).toBe('Green');\n     });\n\n  it('returns text alternative for multiple selected options in explicitly defined listbox',\n     () => {\n       render(\n           html`\n        <div id=\"foo\" role=\"listbox\">\n          <div role=\"option\" aria-selected=\"true\">Green</div>\n          <div role=\"option\" aria-selected=\"true\">Orange</div>\n          <div role=\"option\">Red</div>\n          <div role=\"option\">Blue</div>\n        </div>\n      `,\n           container);\n       const elem = document.getElementById('foo');\n       const context = getDefaultContext();\n       context.inherited.partOfName = true;\n       expect(rule2E(elem!, context)).toBe('Green Orange');\n     });\n\n  // Should empty string be returned in this case?\n  it('returns null if no options are selected in explicitly defined listbox',\n     () => {\n       render(\n           html`\n        <div id=\"foo\" role=\"listbox\">\n          <div role=\"option\">Green</div>\n          <div role=\"option\">Orange</div>\n          <div role=\"option\">Red</div>\n          <div role=\"option\">Blue</div>\n        </div>\n      `,\n           container);\n       const elem = document.getElementById('foo');\n       const context = getDefaultContext();\n       context.inherited.partOfName = true;\n       expect(rule2E(elem!, context)).toBe(null);\n     });\n\n  it('returns aria-valuetext value if present in range input', () => {\n    render(\n        html` <input id=\"foo\" type=\"range\" aria-valuetext=\"5\" /> `, container);\n    const elem = document.getElementById('foo');\n    const context = getDefaultContext();\n    context.inherited.partOfName = true;\n    expect(rule2E(elem!, context)).toBe('5');\n  });\n\n  it('returns aria-valuenow value if present in range input', () => {\n    render(\n        html` <input id=\"foo\" type=\"range\" aria-valuenow=\"5\" /> `, container);\n    const elem = document.getElementById('foo');\n    const context = getDefaultContext();\n    context.inherited.partOfName = true;\n    expect(rule2E(elem!, context)).toBe('5');\n  });\n\n  it('gives aria-valuetext priority over aria-valuenow for range input', () => {\n    render(\n        html`\n        <input id=\"foo\" type=\"range\" aria-valuenow=\"6\" aria-valuetext=\"5\" />\n      `,\n        container);\n    const elem = document.getElementById('foo');\n    const context = getDefaultContext();\n    context.inherited.partOfName = true;\n    expect(rule2E(elem!, context)).toBe('5');\n  });\n\n  it('returns range input value if neither aria-valuetext nor aria-valuenow are present',\n     () => {\n       render(html` <input id=\"foo\" type=\"range\" value=\"5\" /> `, container);\n       const elem = document.getElementById('foo');\n       const context = getDefaultContext();\n       context.inherited.partOfName = true;\n       expect(rule2E(elem!, context)).toBe('5');\n     });\n\n  it('gives aria-valuetext priority over native value for range input', () => {\n    render(\n        html` <input id=\"foo\" type=\"range\" value=\"6\" aria-valuetext=\"5\" /> `,\n        container);\n    const elem = document.getElementById('foo');\n    const context = getDefaultContext();\n    context.inherited.partOfName = true;\n    expect(rule2E(elem!, context)).toBe('5');\n  });\n\n  it('gives aria-valuenow priority over native value for range input', () => {\n    render(\n        html` <input id=\"foo\" type=\"range\" value=\"6\" aria-valuenow=\"5\" /> `,\n        container);\n    const elem = document.getElementById('foo');\n    const context = getDefaultContext();\n    context.inherited.partOfName = true;\n    expect(rule2E(elem!, context)).toBe('5');\n  });\n\n  it('returns value attribute if input is explicitly defined as range and neither aria-valuenow nor aria-valuetext are present',\n     () => {\n       render(\n           html` <input id=\"foo\" role=\"spinbutton\" value=\"5\" /> `, container);\n       const elem = document.getElementById('foo');\n       const context = getDefaultContext();\n       context.inherited.partOfName = true;\n       expect(rule2E(elem!, context)).toBe('5');\n     });\n\n  it('returns value attribute of progress element if neither aria-valuenow nor aria-valuetext are present',\n     () => {\n       render(\n           html` <progress id=\"foo\" max=\"10\" value=\"5\"></progress> `,\n           container);\n       const elem = document.getElementById('foo');\n       const context = getDefaultContext();\n       context.inherited.partOfName = true;\n       expect(rule2E(elem!, context)).toBe('5');\n     });\n\n  it('considers implicit textbox role being explicitly overwritten', () => {\n    render(\n        html` <textarea id=\"foo\" role=\"spinbutton\">Hello world</textarea> `,\n        container);\n    const elem = document.getElementById('foo');\n    const context = getDefaultContext();\n    context.inherited.partOfName = true;\n    expect(rule2E(elem!, context)).toBe(null);\n  });\n\n  it('considers implicit listbox / combobox role being explicitly overwritten',\n     () => {\n       render(\n           html`\n        <select id=\"foo\" role=\"spinbutton\">\n          <option selected>Hello world</option>\n        </select>\n      `,\n           container);\n       const elem = document.getElementById('foo');\n       const context = getDefaultContext();\n       context.inherited.partOfName = true;\n       expect(rule2E(elem!, context)).toBe(null);\n     });\n\n  it('considers implicit range role being explicitly overwritten', () => {\n    render(\n        html` <input id=\"foo\" type=\"number\" role=\"textbox\" value=\"5\" /> `,\n        container);\n    const elem = document.getElementById('foo');\n    const context = getDefaultContext();\n    context.inherited.partOfName = true;\n    expect(rule2E(elem!, context)).toBe(null);\n  });\n});\n"]}