{"version":3,"file":"rule2F.js","sourceRoot":"","sources":["../../src/lib/rule2F.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;AAKH,yCAAmC;AACnC,iCAAkD;AAGlD,MAAM,wBAAwB,GAAG;IAC/B,8CAA8C;IAC9C,wDAAwD;IACxD,KAAK,EAAE;QACL,QAAQ,EAAS,MAAM,EAAM,UAAU;QACvC,cAAc,EAAG,UAAU,EAAE,SAAS;QACtC,MAAM,EAAW,UAAU,EAAE,kBAAkB;QAC/C,eAAe,EAAE,QAAQ,EAAI,OAAO;QACpC,KAAK,EAAY,UAAU,EAAE,WAAW;QACxC,QAAQ,EAAS,KAAK,EAAO,SAAS;QACtC,MAAM,EAAW,UAAU;KAC5B;IACD,4DAA4D;IAC5D,gCAAgC;IAChC,oDAAoD;IACpD,IAAI,EAAE;QACJ,QAAQ;QACR,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,SAAS;QACT,OAAO;QACP,OAAO;QACP,OAAO;KACR;CACF,CAAC;AAEF,yEAAyE;AACzE,gEAAgE;AAChE,EAAE;AACF,6EAA6E;AAC7E,oEAAoE;AACpE,oBAAoB;AACpB,MAAM,uBAAuB,GAAG;IAC9B,KAAK,EAAE;QACL,OAAO,EAAU,aAAa,EAAE,aAAa,EAAE,SAAS,EAAE,QAAQ;QAClE,eAAe,EAAE,QAAQ,EAAO,UAAU,EAAK,MAAM,EAAK,QAAQ;QAClE,MAAM,EAAW,MAAM,EAAS,OAAO,EAAQ,KAAK,EAAM,SAAS;QACnE,KAAK,EAAY,MAAM,EAAS,SAAS,EAAM,MAAM,EAAK,MAAM;QAChE,SAAS,EAAQ,YAAY,EAAG,YAAY,EAAG,QAAQ,EAAG,WAAW;QACrE,QAAQ,EAAS,WAAW,EAAI,WAAW,EAAI,QAAQ,EAAG,YAAY;QACtE,SAAS,EAAQ,UAAU,EAAK,SAAS,EAAM,OAAO,EAAI,SAAS;QACnE,UAAU;KACX;IACD,IAAI,EAAE;QACJ,SAAS,EAAE,OAAO,EAAE,MAAM,EAAI,UAAU,EAAE,QAAQ,EAAG,UAAU,EAAE,QAAQ;QACzE,QAAQ,EAAG,MAAM,EAAG,QAAQ,EAAE,IAAI,EAAQ,KAAK,EAAM,OAAO,EAAK,MAAM;QACvE,MAAM,EAAK,MAAM,EAAG,KAAK,EAAK,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAI,UAAU;KAC5E;CACF,CAAC;AAEF,cAAc;AACd,qEAAqE;AACrE,MAAM,2BAA2B,GAAG;IAClC,KAAK,EAAE;QACL,aAAa;QACb,YAAY;QACZ,WAAW;QACX,MAAM;QACN,MAAM;QACN,QAAQ;QACR,OAAO;QACP,MAAM;KACP;IACD,IAAI,EAAE,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC;CAC7D,CAAC;AAEF;;;;;;;;;GASG;AACH,SAAS,2CAA2C,CAAC,YAAoB;IAEvE,QAAQ,YAAY,EAAE;QACpB,KAAK,IAAI;YACP,OAAO,CAAC,IAAiB,EAAE,EAAE,CAAC,kBAAO,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,IAAI,CAAC;QAChE,KAAK,IAAI;YACP,OAAO,CAAC,IAAiB,EAAE,EAAE,CAAC,kBAAO,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,IAAI,CAAC;QAChE,KAAK,QAAQ;YACX,OAAO,CAAC,IAAiB,EAAE,EAAE,CAAC,kBAAO,CAAC,IAAI,EAAE,iBAAiB,CAAC,KAAK,IAAI,CAAC;QAC1E,KAAK,GAAG;YACN,OAAO,CAAC,IAAiB,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC1D,KAAK,MAAM;YACT,OAAO,CAAC,IAAiB,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC1D,KAAK,MAAM;YACT,OAAO,CAAC,IAAiB,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC1D;YACE,OAAO,IAAI,CAAC;KACf;AACH,CAAC;AAWD;;;;GAIG;AACH,SAAS,WAAW,CAAC,IAAiB,EAAE,QAAkB;;IACxD,oDAAoD;IACpD,MAAM,YAAY,eAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,0CAAE,IAAI,GAAG,WAAW,qCAAM,EAAE,CAAC;IAC3E,IAAI,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;QACzC,OAAO,IAAI,CAAC;KACb;IAED,qDAAqD;IACrD,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IACjD,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;QACxC,OAAO,IAAI,CAAC;KACb;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;;;;GAOG;AACH,SAAgB,qBAAqB,CACjC,IAAiB,EAAE,OAAgB;IACrC,+DAA+D;IAC/D,gCAAgC;IAChC,qEAAqE;;IAErE,uBAAuB;IACvB,IAAI,OAAO,CAAC,SAAS,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,EAAE;QACtD,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;QAClC,IAAI,WAAW,CAAC,MAAM,EAAE,wBAAwB,CAAC;YAC7C,WAAW,CAAC,IAAI,EAAE,2BAA2B,CAAC,EAAE;YAClD,OAAO,IAAI,CAAC;SACb;KACF;IAED,uBAAuB;IACvB,IAAI,WAAW,CAAC,IAAI,EAAE,uBAAuB,CAAC,EAAE;QAC9C,kEAAkE;QAClE,6DAA6D;QAC7D,IAAI,OAAA,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,0CAAE,WAAW,QAAO,MAAM,EAAE;YACvD,OAAO,KAAK,CAAC;SACd;QACD,OAAO,kBAAW,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,uBAAuB;IACvB,IAAI,WAAW,CAAC,IAAI,EAAE,wBAAwB,CAAC,EAAE;QAC/C,OAAO,IAAI,CAAC;KACb;IAED,iEAAiE;IACjE,2BAA2B;IAC3B,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IACjD,MAAM,uBAAuB,GACzB,2CAA2C,CAAC,YAAY,CAAC,CAAC;IAC9D,IAAI,uBAAuB,IAAI,uBAAuB,CAAC,IAAI,CAAC,EAAE;QAC5D,OAAO,IAAI,CAAC;KACb;IAED,IAAI,OAAO,CAAC,oBAAoB,EAAE;QAChC,OAAO,IAAI,CAAC;KACb;IAED,IAAI,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE;QAChC,OAAO,IAAI,CAAC;KACb;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAhDD,sDAgDC;AAED;;;;;;;GAOG;AACH,SAAgB,aAAa,CACzB,IAAiB,EAAE,iBAAyB;IAC9C,MAAM,aAAa,GAAG,MAAM,CAAC,gBAAgB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;IACvE,MAAM,UAAU,GAAW,aAAa,CAAC,OAAO,CAAC;IACjD,MAAM,cAAc,GAAG,aAAa,CAAC,OAAO,KAAK,OAAO,CAAC;IACzD,wDAAwD;IACxD,gEAAgE;IAChE,+DAA+D;IAC/D,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC;QACpE,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,EAAE;QAC1E,OAAO,cAAc,CAAC,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;YACrC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KACjD;IACD,OAAO,EAAE,CAAC;AACZ,CAAC;AAdD,sCAcC;AAED,wEAAwE;AACxE,qEAAqE;AACxD,QAAA,UAAU,GAAG;IACxB,GAAG,EAAO,MAAM,EAAM,SAAS,EAAG,GAAG,EAAM,KAAK,EAAK,KAAK,EAAO,KAAK;IACtE,QAAQ,EAAE,QAAQ,EAAI,MAAM,EAAM,MAAM,EAAG,MAAM,EAAI,UAAU,EAAE,KAAK;IACtE,KAAK,EAAK,IAAI,EAAQ,OAAO,EAAK,GAAG,EAAM,QAAQ,EAAE,KAAK,EAAO,KAAK;IACtE,KAAK,EAAK,OAAO,EAAK,KAAK,EAAO,MAAM,EAAG,OAAO,EAAG,UAAU,EAAE,QAAQ;IACzE,QAAQ,EAAE,SAAS,EAAG,UAAU,EAAE,GAAG,EAAM,MAAM,EAAI,GAAG,EAAS,MAAM;IACvE,QAAQ,EAAE,QAAQ,EAAI,MAAM,EAAM,OAAO,EAAE,MAAM,EAAI,QAAQ,EAAI,KAAK;IACtE,KAAK,EAAK,UAAU,EAAE,UAAU,EAAE,MAAM,EAAG,IAAI,EAAM,GAAG,EAAS,KAAK;IACtE,OAAO,EAAG,KAAK;CAChB,CAAC;AAEF;;;;;;;GAOG;AACH,SAAgB,MAAM,CAClB,IAAU,EACV,OAAuB,EACvB,OAAgB,EAChB,sBAA8C;IAEhD,IAAI,CAAC,oBAAa,CAAC,IAAI,CAAC,EAAE;QACxB,OAAO,IAAI,CAAC;KACb;IAED,8DAA8D;IAC9D,sDAAsD;IACtD,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE;QACzC,OAAO,IAAI,CAAC;KACb;IAED,MAAM,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAEnD,4DAA4D;IAC5D,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IACxD,IAAI,gBAAgB,EAAE;QACpB,KAAK,MAAM,KAAK,IAAI,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YAC/C,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YACtD,IAAI,cAAc,EAAE;gBAClB,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aACrC;SACF;KACF;IAED,MAAM,gBAAgB,GAAa,EAAE,CAAC;IACtC,KAAK,MAAM,SAAS,IAAI,cAAc,EAAE;QACtC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YACvD,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/C,OAAO,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;YAEpC,MAAM,eAAe,GAAG,sBAAsB,CAAC,SAAS,EAAE,OAAO,EAAE;gBACzC,SAAS,EAAE,OAAO,CAAC,SAAS;aAC7B,CAAC,CAAC,IAAI,CAAC;YAEhC,IAAI,kBAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;gBACrD,SAAS,CAAC,QAAQ,KAAK,IAAI,CAAC,SAAS,EAAE;gBACzC,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACxC;iBAAM;gBACL,gBAAgB,CAAC,IAAI,CAAC,IAAI,eAAe,GAAG,CAAC,CAAC;aAC/C;SACF;KACF;IAED,IAAI,OAAO,CAAC,qBAAqB,EAAE;QACjC,gBAAgB,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;QACzD,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;KACtD;IAED,MAAM,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzC,IAAI,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;QACxB,4EAA4E;QAC5E,sCAAsC;QACtC,OAAO,IAAI,CAAC;KACb;SAAM;QACL,OAAO,MAAM,CAAC;KACf;AACH,CAAC;AA7DD,wBA6DC;AAEY,QAAA,SAAS,GAAG;IACvB,qBAAqB;IACrB,wBAAwB;IACxB,2BAA2B;IAC3B,uBAAuB;CACxB,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ComputeTextAlternative} from './compute_text_alternative';\nimport {Context} from './context';\nimport {AccnameOptions} from './options';\nimport {closest} from './polyfill';\nimport {isFocusable, isHTMLElement} from './util';\n\n\nconst ALWAYS_NAME_FROM_CONTENT = {\n  // Explicit roles allowing 'name from content'\n  // (https://www.w3.org/TR/wai-aria-1.1/#namefromcontent)\n  roles: [\n    'button',        'cell',     'checkbox',\n    'columnheader',  'gridcell', 'heading',\n    'link',          'menuitem', 'menuitemcheckbox',\n    'menuitemradio', 'option',   'radio',\n    'row',           'rowgroup', 'rowheader',\n    'switch',        'tab',      'tooltip',\n    'tree',          'treeitem',\n  ],\n  // HTML element types that allow name from content according\n  // to their implicit aria roles.\n  // (https://www.w3.org/TR/html-aria/#docconformance)\n  tags: [\n    'button',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'summary',\n    'tbody',\n    'tfoot',\n    'thead',\n  ],\n};\n\n// See https://lists.w3.org/Archives/Public/public-aria/2017Jun/0057.html\n// for discussion of roles & tags that forbid name from content.\n//\n// *This case is not explicitly included in version 1.1 of the spec, however,\n// as per the thread linked above we have included it (as have other\n// implementations).\nconst NEVER_NAME_FROM_CONTENT = {\n  roles: [\n    'alert',         'alertdialog', 'application', 'article', 'banner',\n    'complementary', 'dialog',      'document',    'feed',    'figure',\n    'form',          'grid',        'group',       'img',     'listbox',\n    'log',           'main',        'marquee',     'math',    'menu',\n    'menubar',       'navigation',  'radiogroup',  'region',  'scrollbar',\n    'search',        'searchbox',   'separator',   'slider',  'spinbutton',\n    'tablist',       'tabpanel',    'textbox',     'timer',   'toolbar',\n    'treegrid',\n  ],\n  tags: [\n    'article', 'aside', 'body',   'datalist', 'dialog',  'fieldset', 'figure',\n    'footer',  'form',  'header', 'hr',       'img',     'input',    'main',\n    'math',    'menu',  'nav',    'optgroup', 'section', 'select',   'textarea',\n  ],\n};\n\n// List 3 from\n// https://lists.w3.org/Archives/Public/public-aria/2017Jun/0057.html\nconst SOMETIMES_NAME_FROM_CONTENT = {\n  roles: [\n    'contentinfo',\n    'definition',\n    'directory',\n    'list',\n    'note',\n    'status',\n    'table',\n    'term',\n  ],\n  tags: ['dd', 'details', 'dl', 'ol', 'output', 'table', 'ul'],\n};\n\n/**\n * Some HTML elements allow name from context only if certain\n * conditions apply. This function maps element types to functions that\n * determine if a specific element of that type allows name from content\n * (https://www.w3.org/TR/html-aria/#docconformance)\n * @param elemNodeName - the nodeName (tag type) of the element whose ability\n * to allow name from content is being calculated.\n * @return - a function that may be applied to an element of type elemNodeName\n * that returns true if that node allows name from content, and false otherwise.\n */\nfunction getFunctionCalculatingAllowsNameFromContent(elemNodeName: string):\n    ((elem: HTMLElement) => boolean)|null {\n  switch (elemNodeName) {\n    case 'th':\n      return (elem: HTMLElement) => closest(elem, 'table') !== null;\n    case 'td':\n      return (elem: HTMLElement) => closest(elem, 'table') !== null;\n    case 'option':\n      return (elem: HTMLElement) => closest(elem, 'select,datalist') !== null;\n    case 'a':\n      return (elem: HTMLElement) => elem.hasAttribute('href');\n    case 'area':\n      return (elem: HTMLElement) => elem.hasAttribute('href');\n    case 'link':\n      return (elem: HTMLElement) => elem.hasAttribute('href');\n    default:\n      return null;\n  }\n}\n\n/**\n * A container for lists of roles (explicit) and tags (implicit) that\n * together account for a certain genre / type of role.\n */\ninterface RoleType {\n  roles: string[];\n  tags: string[];\n}\n\n/**\n * Checks if a given HTMLElement matches any of the roles in a given RoleType.\n * @param elem - element whose role type is in question.\n * @param roleType - lists of indicators for some role type.\n */\nfunction matchesRole(elem: HTMLElement, roleType: RoleType): boolean {\n  // Explicit roles : specified using 'role' attribute\n  const explicitRole = elem.getAttribute('role')?.trim().toLowerCase() ?? '';\n  if (roleType.roles.includes(explicitRole)) {\n    return true;\n  }\n\n  // Implicit roles : implied by current node tag name.\n  const elemNodeName = elem.nodeName.toLowerCase();\n  if (roleType.tags.includes(elemNodeName)) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Checks if the contents of 'elem' with context 'context' should\n * be used in its accesssible name. This is the condition for\n * rule 2F.\n * @param elem - elem whose text alternative is being computed\n * @param context - additional information about the context of elem\n * @return - whether or not rule 2Fs condition has been satisfied\n */\nexport function allowsNameFromContent(\n    elem: HTMLElement, context: Context): boolean {\n  // The terms 'list 1', 'list 2', 'list 3' are used in reference\n  // to the following thread: see:\n  // https://lists.w3.org/Archives/Public/public-aria/2017Jun/0057.html\n\n  // Handles list 3 roles\n  if (context.inherited.partOfName && elem.parentElement) {\n    const parent = elem.parentElement;\n    if (matchesRole(parent, ALWAYS_NAME_FROM_CONTENT) &&\n        matchesRole(elem, SOMETIMES_NAME_FROM_CONTENT)) {\n      return true;\n    }\n  }\n\n  // Handles list 2 roles\n  if (matchesRole(elem, NEVER_NAME_FROM_CONTENT)) {\n    // role=menu should not allow name from content even if focusable.\n    // See http://wpt.live/accname/name_test_case_733-manual.html\n    if (elem.getAttribute('role')?.toLowerCase() === 'menu') {\n      return false;\n    }\n    return isFocusable(elem);\n  }\n\n  // Handles list 1 roles\n  if (matchesRole(elem, ALWAYS_NAME_FROM_CONTENT)) {\n    return true;\n  }\n\n  // Elements that conditionally have an implicit role that matches\n  // ALWAYS_NAME_FROM_CONTENT\n  const elemNodeName = elem.nodeName.toLowerCase();\n  const nameFromContentFunction =\n      getFunctionCalculatingAllowsNameFromContent(elemNodeName);\n  if (nameFromContentFunction && nameFromContentFunction(elem)) {\n    return true;\n  }\n\n  if (context.directLabelReference) {\n    return true;\n  }\n\n  if (context.inherited.partOfName) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Gets text content generated by CSS pseudo elements for a given HTMLElement\n * @param elem - element whose css generated content is being calculated\n * @param pseudoElementName - the name of the pseudo element whose content is\n * being resolved.\n * @return - css generated content for pseudoElementName if such content exists,\n * empty string otherwise.\n */\nexport function getCssContent(\n    elem: HTMLElement, pseudoElementName: string): string {\n  const computedStyle = window.getComputedStyle(elem, pseudoElementName);\n  const cssContent: string = computedStyle.content;\n  const isBlockDisplay = computedStyle.display === 'block';\n  // <string> CSS content identified by surrounding quotes\n  // see: https://developer.mozilla.org/en-US/docs/Web/CSS/content\n  // and: https://developer.mozilla.org/en-US/docs/Web/CSS/string\n  if ((cssContent[0] === '\"' && cssContent[cssContent.length - 1] === '\"') ||\n      (cssContent[0] === '\\'' && cssContent[cssContent.length - 1] === '\\'')) {\n    return isBlockDisplay ? ' ' + cssContent.slice(1, -1) + ' ' :\n                            cssContent.slice(1, -1);\n  }\n  return '';\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements\n// 'br' removed as it should add a whitespace to the accessible name.\nexport const inlineTags = [\n  'a',      'abbr',     'acronym',  'b',     'bdi',    'bdo',      'big',\n  'button', 'canvas',   'cite',     'code',  'data',   'datalist', 'del',\n  'dfn',    'em',       'embed',    'i',     'iframe', 'img',      'ins',\n  'kbd',    'label',    'map',      'mark',  'meter',  'noscript', 'object',\n  'output', 'picture',  'progress', 'q',     'ruby',   's',        'samp',\n  'script', 'select',   'slot',     'small', 'span',   'strong',   'sub',\n  'sup',    'template', 'textarea', 'time',  'tt',     'u',        'var',\n  'video',  'wbr',\n];\n\n/**\n * Implementation of rule 2F\n * @param node - node whose text alternative is being calculated\n * @param context - additional info relevant to the calculation of nodes\n * text alternative\n * @return - text alternative for node if the conditions of 2F are satisfied,\n * null otherwise.\n */\nexport function rule2F(\n    node: Node,\n    options: AccnameOptions,\n    context: Context,\n    computeTextAlternative: ComputeTextAlternative,\n    ): string|null {\n  if (!isHTMLElement(node)) {\n    return null;\n  }\n\n  // The condition for rule 2F determines if the contents of the\n  // current node should be used in its accessible name.\n  if (!allowsNameFromContent(node, context)) {\n    return null;\n  }\n\n  const a11yChildNodes = Array.from(node.childNodes);\n\n  // Include any aria-owned Nodes in the list of 'child nodes'\n  const ariaOwnedNodeIds = node.getAttribute('aria-owns');\n  if (ariaOwnedNodeIds) {\n    for (const idref of ariaOwnedNodeIds.split(' ')) {\n      const referencedNode = document.getElementById(idref);\n      if (referencedNode) {\n        a11yChildNodes.push(referencedNode);\n      }\n    }\n  }\n\n  const textAlterantives: string[] = [];\n  for (const childNode of a11yChildNodes) {\n    if (!context.inherited.visitedNodes.includes(childNode)) {\n      context.inherited.visitedNodes.push(childNode);\n      context.inherited.partOfName = true;\n\n      const textAlterantive = computeTextAlternative(childNode, options, {\n                                inherited: context.inherited,\n                              }).name;\n\n      if (inlineTags.includes(childNode.nodeName.toLowerCase()) ||\n          childNode.nodeType === Node.TEXT_NODE) {\n        textAlterantives.push(textAlterantive);\n      } else {\n        textAlterantives.push(` ${textAlterantive} `);\n      }\n    }\n  }\n\n  if (options.includePseudoElements) {\n    textAlterantives.unshift(getCssContent(node, ':before'));\n    textAlterantives.push(getCssContent(node, ':after'));\n  }\n\n  const result = textAlterantives.join('');\n  if (result.trim() === '') {\n    // # SPEC ASSUMPTION: If the name from contents only contains whitespace, we\n    // assume that rule 2F does not apply.\n    return null;\n  } else {\n    return result;\n  }\n}\n\nexport const TEST_ONLY = {\n  allowsNameFromContent,\n  ALWAYS_NAME_FROM_CONTENT,\n  SOMETIMES_NAME_FROM_CONTENT,\n  NEVER_NAME_FROM_CONTENT,\n};\n"]}