{"version":3,"file":"rule2G_test.js","sourceRoot":"","sources":["../../src/lib/rule2G_test.ts"],"names":[],"mappings":";;AAAA,6BAAiC;AAEjC,qCAAgC;AAEhC,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;IACxC,IAAI,SAAsB,CAAC;IAC3B,UAAU,CAAC,GAAG,EAAE;QACd,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;;QACzC,YAAM,CAAC,UAAI,CAAA,mCAAmC,EAAE,SAAS,CAAC,CAAC;QAC3D,MAAM,IAAI,SAAG,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,0CAAE,UAAU,CAAC,CAAC,CAAC,CAAC;QAC3D,MAAM,CAAC,eAAM,CAAC,IAAK,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;QAChE,MAAM,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACzC,MAAM,CAAC,eAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACrD,YAAM,CACF,UAAI,CAAA;;;;OAIL,EACC,SAAS,CAAC,CAAC;QACf,MAAM,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC5C,MAAM,CAAC,eAAM,CAAC,IAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {html, render} from 'lit';\n\nimport {rule2G} from './rule2G';\n\ndescribe('The function for rule 2G', () => {\n  let container: HTMLElement;\n  beforeEach(() => {\n    container = document.createElement('div');\n    document.body.appendChild(container);\n  });\n\n  afterEach(() => {\n    document.body.removeChild(container);\n  });\n\n  it('returns text content text nodes', () => {\n    render(html` <div id=\"foo\">Hello world</div> `, container);\n    const node = document.getElementById('foo')?.childNodes[0];\n    expect(rule2G(node!)).toBe('Hello world');\n  });\n\n  it('returns the empty string if no text content is present', () => {\n    const node = document.createTextNode('');\n    expect(rule2G(node)).toBe('');\n  });\n\n  it('returns null if the node is not a text node', () => {\n    render(\n        html`\n        <div id=\"foo\">\n          Hello world newline\n        </div>\n      `,\n        container);\n    const node = document.getElementById('foo');\n    expect(rule2G(node!)).toBe(null);\n  });\n});\n"]}