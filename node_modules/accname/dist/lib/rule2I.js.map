{"version":3,"file":"rule2I.js","sourceRoot":"","sources":["../../src/lib/rule2I.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;AAEH,iCAAiD;AAEjD,wEAAwE;AACxE,0BAA0B;AAC1B,4LAA4L;AAC5L,MAAM,mBAAmB,GAAG;IAC1B,MAAM;IACN,UAAU;IACV,QAAQ;IACR,KAAK;IACL,OAAO;IACP,KAAK;CACN,CAAC;AAEF;;;;GAIG;AACH,SAAgB,MAAM,CAAC,IAAU;IAC/B,IAAI,CAAC,oBAAa,CAAC,IAAI,CAAC,EAAE;QACxB,OAAO,IAAI,CAAC;KACb;IAED,IAAI,IAAI,CAAC,KAAK,EAAE;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAED,iDAAiD;IACjD,MAAM;IACN,4LAA4L;IAE5L,IAAI,iBAAU,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;QACxE,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAED,IAAI,iBAAU,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE;QACpE,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;KACzC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAtBD,wBAsBC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {hasTagName, isHTMLElement} from './util';\n\n// Input types for whom placeholders should be considered when computing\n// a text alternative. See\n// https://www.w3.org/TR/html-aam-1.0/#input-type-text-input-type-password-input-type-search-input-type-tel-input-type-email-input-type-url-and-textarea-element-accessible-name-computation\nconst TEXTUAL_INPUT_TYPES = [\n  'text',\n  'password',\n  'search',\n  'tel',\n  'email',\n  'url',\n];\n\n/**\n * Implementation for rule 2I\n * @param node - node whose text alternative is being computed\n * @return - text alternative if rule 2I applies to node, null otherwise.\n */\nexport function rule2I(node: Node): string|null {\n  if (!isHTMLElement(node)) {\n    return null;\n  }\n\n  if (node.title) {\n    return node.title;\n  }\n\n  // Placeholder considered if no title is present.\n  // See\n  // https://www.w3.org/TR/html-aam-1.0/#input-type-text-input-type-password-input-type-search-input-type-tel-input-type-email-input-type-url-and-textarea-element-accessible-name-computation\n\n  if (hasTagName(node, 'input') && TEXTUAL_INPUT_TYPES.includes(node.type)) {\n    return node.placeholder;\n  }\n\n  if (hasTagName(node, 'textarea') && node.hasAttribute('placeholder')) {\n    return node.getAttribute('placeholder');\n  }\n\n  return null;\n}\n"]}