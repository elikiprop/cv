"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const lit_1 = require("lit");
const rule2I_1 = require("./rule2I");
describe('The function for rule 2I', () => {
    let container;
    beforeEach(() => {
        container = document.createElement('div');
        document.body.appendChild(container);
    });
    afterEach(() => {
        document.body.removeChild(container);
    });
    it('returns title attribute value if present', () => {
        lit_1.render(lit_1.html ` <div id="foo" title="Hello world"></div> `, container);
        expect(rule2I_1.rule2I(document.getElementById('foo'))).toBe('Hello world');
    });
    it('returns null if title attribute is not present', () => {
        lit_1.render(lit_1.html ` <div id="foo"></div> `, container);
        expect(rule2I_1.rule2I(document.getElementById('foo'))).toBe(null);
    });
    it('returns placeholder for textual inputs if title not present', () => {
        lit_1.render(lit_1.html ` <input id="foo" type="text" placeholder="Hello world" /> `, container);
        expect(rule2I_1.rule2I(document.getElementById('foo'))).toBe('Hello world');
    });
    it('returns placeholder for textareas if title not present', () => {
        lit_1.render(lit_1.html ` <textarea id="foo" placeholder="Hello world"></textarea> `, container);
        expect(rule2I_1.rule2I(document.getElementById('foo'))).toBe('Hello world');
    });
    it('returns title with priority over placeholder', () => {
        lit_1.render(lit_1.html `
        <textarea
          id="foo"
          placeholder="Goodbye world"
          title="Hello world"
        ></textarea>
      `, container);
        expect(rule2I_1.rule2I(document.getElementById('foo'))).toBe('Hello world');
    });
});
//# sourceMappingURL=rule2I_test.js.map