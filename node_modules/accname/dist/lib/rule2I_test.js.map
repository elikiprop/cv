{"version":3,"file":"rule2I_test.js","sourceRoot":"","sources":["../../src/lib/rule2I_test.ts"],"names":[],"mappings":";;AAAA,6BAAiC;AAEjC,qCAAgC;AAEhC,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;IACxC,IAAI,SAAsB,CAAC;IAC3B,UAAU,CAAC,GAAG,EAAE;QACd,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAClD,YAAM,CAAC,UAAI,CAAA,4CAA4C,EAAE,SAAS,CAAC,CAAC;QACpE,MAAM,CAAC,eAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;QACxD,YAAM,CAAC,UAAI,CAAA,wBAAwB,EAAE,SAAS,CAAC,CAAC;QAChD,MAAM,CAAC,eAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6DAA6D,EAAE,GAAG,EAAE;QACrE,YAAM,CACF,UAAI,CAAA,4DAA4D,EAChE,SAAS,CAAC,CAAC;QACf,MAAM,CAAC,eAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;QAChE,YAAM,CACF,UAAI,CAAA,4DAA4D,EAChE,SAAS,CAAC,CAAC;QACf,MAAM,CAAC,eAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACtD,YAAM,CACF,UAAI,CAAA;;;;;;OAML,EACC,SAAS,CAAC,CAAC;QACf,MAAM,CAAC,eAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {html, render} from 'lit';\n\nimport {rule2I} from './rule2I';\n\ndescribe('The function for rule 2I', () => {\n  let container: HTMLElement;\n  beforeEach(() => {\n    container = document.createElement('div');\n    document.body.appendChild(container);\n  });\n\n  afterEach(() => {\n    document.body.removeChild(container);\n  });\n\n  it('returns title attribute value if present', () => {\n    render(html` <div id=\"foo\" title=\"Hello world\"></div> `, container);\n    expect(rule2I(document.getElementById('foo')!)).toBe('Hello world');\n  });\n\n  it('returns null if title attribute is not present', () => {\n    render(html` <div id=\"foo\"></div> `, container);\n    expect(rule2I(document.getElementById('foo')!)).toBe(null);\n  });\n\n  it('returns placeholder for textual inputs if title not present', () => {\n    render(\n        html` <input id=\"foo\" type=\"text\" placeholder=\"Hello world\" /> `,\n        container);\n    expect(rule2I(document.getElementById('foo')!)).toBe('Hello world');\n  });\n\n  it('returns placeholder for textareas if title not present', () => {\n    render(\n        html` <textarea id=\"foo\" placeholder=\"Hello world\"></textarea> `,\n        container);\n    expect(rule2I(document.getElementById('foo')!)).toBe('Hello world');\n  });\n\n  it('returns title with priority over placeholder', () => {\n    render(\n        html`\n        <textarea\n          id=\"foo\"\n          placeholder=\"Goodbye world\"\n          title=\"Hello world\"\n        ></textarea>\n      `,\n        container);\n    expect(rule2I(document.getElementById('foo')!)).toBe('Hello world');\n  });\n});\n"]}