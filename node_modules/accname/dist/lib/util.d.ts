/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
/**
 * Calculates whether or not a given element is focusable.
 * @param elem - The element whose focusability is to be calculated.
 */
export declare function isFocusable(elem: HTMLElement): boolean;
/** Whether this `node` is an `Element` */
export declare function isElement(n: Node): n is Element;
/** Whether this `node` is an `HTMLElement` */
export declare function isHTMLElement(n: Node): n is HTMLElement;
/** Whether this `node` is an `SVGElement` */
export declare function isSVGElement(n: Node): n is SVGElement;
/**
 * Checks whether the `tagName` of a particular element matches a known
 * tagName. The `tagName` is constrained by the same type mappings that are used
 * in `document.querySelector`, which allows us to constrain the return type as
 * well.
 */
export declare function hasTagName<TagName extends keyof HTMLElementTagNameMap>(el: HTMLElement, name: TagName): el is HTMLElementTagNameMap[TagName];
export declare function hasTagName<TagName extends keyof SVGElementTagNameMap>(el: SVGElement, name: TagName): el is SVGElementTagNameMap[TagName];
//# sourceMappingURL=util.d.ts.map