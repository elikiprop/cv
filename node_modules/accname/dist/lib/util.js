"use strict";
/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.hasTagName = exports.isSVGElement = exports.isHTMLElement = exports.isElement = exports.isFocusable = void 0;
/**
 * Calculates whether or not a given element is focusable.
 * @param elem - The element whose focusability is to be calculated.
 */
function isFocusable(elem) {
    // See
    // https://html.spec.whatwg.org/multipage/interaction.html#the-tabindex-attribute
    if ((hasTagName(elem, 'a') || hasTagName(elem, 'area') ||
        hasTagName(elem, 'link')) &&
        elem.hasAttribute('href')) {
        return true;
    }
    if ((hasTagName(elem, 'input') || hasTagName(elem, 'select') ||
        hasTagName(elem, 'textarea') || hasTagName(elem, 'button')) &&
        !elem.hasAttribute('disabled')) {
        return true;
    }
    return elem.hasAttribute('tabindex') || elem.isContentEditable;
}
exports.isFocusable = isFocusable;
/** Whether this `node` is an `Element` */
function isElement(n) {
    return n.nodeType === Node.ELEMENT_NODE;
}
exports.isElement = isElement;
/** Whether this `node` is an `HTMLElement` */
function isHTMLElement(n) {
    return isElement(n) && n.namespaceURI === `http://www.w3.org/1999/xhtml`;
}
exports.isHTMLElement = isHTMLElement;
/** Whether this `node` is an `SVGElement` */
function isSVGElement(n) {
    return isElement(n) && n.namespaceURI === `http://www.w3.org/2000/svg`;
}
exports.isSVGElement = isSVGElement;
function hasTagName(el, name) {
    return el.tagName.toLowerCase() === name;
}
exports.hasTagName = hasTagName;
//# sourceMappingURL=util.js.map