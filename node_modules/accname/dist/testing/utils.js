"use strict";
/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.createRuleRunner = void 0;
const compute_text_alternative_1 = require("../lib/compute_text_alternative");
const context_1 = require("../lib/context");
const options_1 = require("../lib/options");
/**
 * Helper to abstract over the exact interface of a rule and avoid having to
 * explicitly pass a default context of the textAlternative function.
 */
function createRuleRunner(rule) {
    return (node, context = context_1.getDefaultContext(), options = options_1.withDefaults({})) => {
        var _a;
        const result = rule(node, options, context, compute_text_alternative_1.TEST_ONLY.computeRawTextAlternative);
        // Tests expect a trimmed flat string.
        return (_a = result === null || result === void 0 ? void 0 : result.replace(/\s+/g, ' ').trim()) !== null && _a !== void 0 ? _a : null;
    };
}
exports.createRuleRunner = createRuleRunner;
//# sourceMappingURL=utils.js.map